AWSTemplateFormatVersion: 2010-09-09
Description: Creating Infrastructure for an application with reusable parameters.

Parameters:
  AMIId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID for the EC2 instances.

  PublicSubnetAZ:
    Type: String
    Description: Availability Zone for the Public Subnet.
    AllowedValues:
      - ap-south-1a
      - ap-south-1b
      - ap-south-1c
    Default: ap-south-1a

  PrivateSubnetAZ:
    Type: String
    Description: Availability Zone for the Private Subnet.
    AllowedValues:
      - ap-south-1a
      - ap-south-1b
      - ap-south-1c
    Default: ap-south-1b

  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.

  PublicSubnetCidrBlock:
    Type: String
    Default: 10.0.0.0/24
    Description: CIDR block for the public subnet.

  PrivateSubnetCidrBlock:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR block for the private subnet.

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing KeyPair to enable SSH access to the instance.

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    Description: EC2 instance type.

  Environment:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Test
      - Prod
    Description: Environment tag for resources.

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CF_VPC
        - Key: Environment
          Value: !Ref Environment

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: !Ref PublicSubnetAZ
      CidrBlock: !Ref PublicSubnetCidrBlock
      Tags:
        - Key: Name
          Value: Pub_Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: !Ref PrivateSubnetAZ
      CidrBlock: !Ref PrivateSubnetCidrBlock
      Tags:
        - Key: Name
          Value: Pvt_Subnet

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CF_IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: Pub_RT

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: Pvt_RT

  PubSubnetRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PvtSubnetRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows SSH and HTTP
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: CF_SG

  AppEc2Instance:
    DependsOn: SecurityGroup
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMIId
      KeyName: !Ref KeyPairName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: App_EC2
        - Key: Environment
          Value: !Ref Environment

  PvtEc2Instance:
    DependsOn: SecurityGroup
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMIId
      KeyName: !Ref KeyPairName
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: 0
          SubnetId: !Ref PrivateSubnet
          GroupSet:
            - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: Pvt_EC2
        - Key: Environment
          Value: !Ref Environment
